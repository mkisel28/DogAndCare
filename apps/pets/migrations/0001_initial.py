# Generated by Django 5.1.1 on 2024-09-18 07:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Breed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the breed",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("Small", "Small"),
                            ("Medium", "Medium"),
                            ("Large", "Large"),
                        ],
                        help_text="The size of the breed",
                        max_length=20,
                    ),
                ),
                (
                    "exercise_needs",
                    models.IntegerField(help_text="Exercise needs in minutes per day"),
                ),
                (
                    "grooming_requirements",
                    models.IntegerField(help_text="Grooming frequency in days"),
                ),
                ("coat_length", models.CharField(max_length=50)),
                ("sheds", models.BooleanField(default=True)),
                (
                    "lifespan",
                    models.IntegerField(help_text="The lifespan of the breed in years"),
                ),
                (
                    "min_weight",
                    models.FloatField(
                        help_text="The minimum weight of the breed in Lbs",
                    ),
                ),
                (
                    "max_weight",
                    models.FloatField(
                        help_text="The maximum weight of the breed in Lbs",
                    ),
                ),
                (
                    "min_height",
                    models.FloatField(
                        help_text="The minimum height of the breed in inches",
                    ),
                ),
                (
                    "max_height",
                    models.FloatField(
                        help_text="The maximum height of the breed in inches",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Temperament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Friendly", "Friendly"),
                            ("Playful", "Playful"),
                            ("Loyal", "Loyal"),
                            ("Protective", "Protective"),
                            ("Energetic", "Energetic"),
                            ("Calm", "Calm"),
                            ("Independent", "Independent"),
                            ("Intelligent", "Intelligent"),
                            ("Stubborn", "Stubborn"),
                            ("Affectionate", "Affectionate"),
                            ("Anxious", "Anxious"),
                            ("Aggressive", "Aggressive"),
                            ("Gentle", "Gentle"),
                            ("Adventurous", "Adventurous"),
                            ("Shy", "Shy"),
                            ("Sociable", "Sociable"),
                            ("Well-Balanced", "Well-Balanced"),
                        ],
                        help_text="The name of the temperament",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Dog", "Dog"),
                            ("Cat", "Cat"),
                            ("Bird", "Bird"),
                            ("Reptile", "Reptile"),
                            ("Other", "Other"),
                        ],
                        help_text="The type of the pet",
                        max_length=20,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="The avatar of the pet",
                        null=True,
                        upload_to="pets",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the pet",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "birth_year",
                    models.IntegerField(
                        blank=True,
                        help_text="The birth year of the pet",
                        null=True,
                    ),
                ),
                (
                    "birth_month",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                        ],
                        help_text="The birth month of the pet",
                        null=True,
                    ),
                ),
                (
                    "birth_day",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                            (13, 13),
                            (14, 14),
                            (15, 15),
                            (16, 16),
                            (17, 17),
                            (18, 18),
                            (19, 19),
                            (20, 20),
                            (21, 21),
                            (22, 22),
                            (23, 23),
                            (24, 24),
                            (25, 25),
                            (26, 26),
                            (27, 27),
                            (28, 28),
                            (29, 29),
                            (30, 30),
                            (31, 31),
                        ],
                        help_text="The birth day of the pet",
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=6,
                        null=True,
                    ),
                ),
                (
                    "is_neutered",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the pet is neutered",
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        blank=True,
                        help_text="The weight of the pet",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time the pet was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time the pet was last updated",
                    ),
                ),
                (
                    "breed",
                    models.ForeignKey(
                        blank=True,
                        help_text="The breed of the pet",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pets.breed",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="The owner of the pet",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "temperament",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The temperament of the pet",
                        null=True,
                        to="pets.temperament",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pet",
                "verbose_name_plural": "Pets",
            },
        ),
    ]
