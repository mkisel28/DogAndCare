version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgresDogAndCare
      POSTGRES_PASSWORD: jdArcjkAjfoM!kdlslFLVDds3dS@s
      POSTGRES_DB: dogandcare
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgresDogAndCare -d dogandcare"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'

  redis:
    image: redis:alpine
    networks:
      - web_net
    restart: always
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: '0.5'

  web:
    build: .
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 2 --worker-class=gthread --timeout 120
      "
    environment:
      DB_NAME: dogandcare
      DB_USER: postgresDogAndCare
      DB_PASSWORD: jdArcjkAjfoM!kdlslFLVDds3dS@s
      DB_HOST: db 
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://88.218.93.26
      CORS_ALLOW_CREDENTIALS: True
      CSRF_TRUSTED_ORIGINS: http://localhost:3000,http://88.218.93.26
    volumes:
      - django_static_volume:/app/staticfiles
      - django_media_volume:/app/mediafiles
      - /var/log/django:/var/log/django
    networks:
      - db_net
      - web_net
    depends_on:
      - db
      - redis
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'


  nginx:
    build: ./nginx
    volumes:
      - django_static_volume:/app/staticfiles
      - django_media_volume:/app/mediafiles
    ports:
      - "80:80"
      - "8000:8000"
    depends_on:
      - web
    networks:
      - web_net
    restart: always


  celery1:
    build: .
    command: celery -A config worker --loglevel=info --concurrency=4 --hostname=worker1@%h --max-tasks-per-child=1000
    environment:
      DB_NAME: dogandcare
      DB_USER: postgresDogAndCare
      DB_PASSWORD: jdArcjkAjfoM!kdlslFLVDds3dS@s
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    networks:
      - web_net
    depends_on:
      - db
      - redis
    restart: always
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: '0.5'

  celery2:
    build: .
    command: celery -A config worker --loglevel=info --concurrency=4 --hostname=worker2@%h --max-tasks-per-child=1000
    environment:
      DB_NAME: dogandcare
      DB_USER: postgresDogAndCare
      DB_PASSWORD: jdArcjkAjfoM!kdlslFLVDds3dS@s
      DB_HOST: db
      DB_PORT: 5432
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    networks:
      - web_net
    depends_on:
      - db
      - redis
    restart: always
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: '0.5'

  flower:
    build: .
    command: celery -A config flower 
    environment:
      BROKER_URL: redis://redis:6379/0
      RESULT_BACKEND: redis://redis:6379/0
      FLOWER_BASIC_AUTH: test:test
    ports:
      - "5555:5555"
    networks:
      - web_net
    depends_on:
      - redis
      - celery1
      - celery2
    restart: always

networks:
  web_net:
  db_net:

volumes:
  django_static_volume:
  django_media_volume:
  postgres_data: